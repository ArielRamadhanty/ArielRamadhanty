Ariel Ramadhanty - 043219039

// Abstraksi MenuItem
abstract class MenuItem {
    private String nama;
    private double harga;
    private String kategori;

    public MenuItem(String nama, double harga, String kategori) {
        this.nama = nama;
        this.harga = harga;
        this.kategori = kategori;
    }

    public String getNama() {
        return nama;
    }

    public double getHarga() {
        return harga;
    }

    public String getKategori() {
        return kategori;
    }

    public abstract void tampilMenu();
}

// Subkelas Makanan
class Makanan extends MenuItem {
    private String jenisMakanan;

    public Makanan(String nama, double harga, String kategori, String jenisMakanan) {
        super(nama, harga, kategori);
        this.jenisMakanan = jenisMakanan;
    }

    @Override
    public void tampilMenu() {
        System.out.println("Makanan: " + getNama() + " | Harga: " + getHarga() + 
                           " | Kategori: " + getKategori() + " | Jenis: " + jenisMakanan);
    }
}

// Subkelas Minuman
class Minuman extends MenuItem {
    private String jenisMinuman;

    public Minuman(String nama, double harga, String kategori, String jenisMinuman) {
        super(nama, harga, kategori);
        this.jenisMinuman = jenisMinuman;
    }

    @Override
    public void tampilMenu() {
        System.out.println("Minuman: " + getNama() + " | Harga: " + getHarga() + 
                           " | Kategori: " + getKategori() + " | Jenis: " + jenisMinuman);
    }
}

// Subkelas Diskon
class Diskon extends MenuItem {
    private double diskon;

    public Diskon(String nama, double harga, String kategori, double diskon) {
        super(nama, harga, kategori);
        this.diskon = diskon;
    }

    @Override
    public void tampilMenu() {
        System.out.println("Diskon: " + getNama() + " | Potongan Harga: " + diskon + "%");
    }

    public double hitungDiskon(double total) {
        return total * (diskon / 100);
    }
}

// Kelas Menu
class Menu {
    private List<MenuItem> daftarMenu = new ArrayList<>();

    public void tambahItem(MenuItem item) {
        daftarMenu.add(item);
    }

    public void tampilkanMenu() {
        System.out.println("Menu Restoran:");
        for (MenuItem item : daftarMenu) {
            item.tampilMenu();
        }
    }

    public MenuItem cariItem(String nama) {
        for (MenuItem item : daftarMenu) {
            if (item.getNama().equalsIgnoreCase(nama)) {
                return item;
            }
        }
        return null;
    }

    public void simpanMenuKeFile(String fileName) throws IOException {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            for (MenuItem item : daftarMenu) {
                writer.write(item.getNama() + ";" + item.getHarga() + ";" + item.getKategori() + "\n");
            }
        }
    }
}

// Kelas Pesanan
class Pesanan {
    private List<MenuItem> itemPesanan = new ArrayList<>();

    public void tambahItem(MenuItem item) {
        itemPesanan.add(item);
    }

    public void tampilkanStruk() {
        System.out.println("Struk Pesanan:");
        double total = 0;
        for (MenuItem item : itemPesanan) {
            System.out.println(item.getNama() + " - Rp " + item.getHarga());
            total += item.getHarga();
        }
        System.out.println("Total: Rp " + total);
    }
}

// Main Program
public class ManajemenRestoran {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Menu menu = new Menu();
        Pesanan pesanan = new Pesanan();

        while (true) {
            System.out.println("\nManajemen Restoran");
            System.out.println("1. Tambah Menu");
            System.out.println("2. Tampilkan Menu");
            System.out.println("3. Tambah Pesanan");
            System.out.println("4. Tampilkan Struk Pesanan");
            System.out.println("5. Keluar");
            System.out.print("Pilih opsi: ");
            int pilihan = scanner.nextInt();

            switch (pilihan) {
                case 1:
                    System.out.print("Nama: ");
                    String nama = scanner.next();
                    System.out.print("Harga: ");
                    double harga = scanner.nextDouble();
                    System.out.print("Kategori (Makanan/Minuman/Diskon): ");
                    String kategori = scanner.next();

                    if (kategori.equalsIgnoreCase("Makanan")) {
                        System.out.print("Jenis Makanan: ");
                        String jenisMakanan = scanner.next();
                        menu.tambahItem(new Makanan(nama, harga, kategori, jenisMakanan));
                    } else if (kategori.equalsIgnoreCase("Minuman")) {
                        System.out.print("Jenis Minuman: ");
                        String jenisMinuman = scanner.next();
                        menu.tambahItem(new Minuman(nama, harga, kategori, jenisMinuman));
                    } else if (kategori.equalsIgnoreCase("Diskon")) {
                        System.out.print("Diskon (%): ");
                        double diskon = scanner.nextDouble();
                        menu.tambahItem(new Diskon(nama, harga, kategori, diskon));
                    }
                    break;

                case 2:
                    menu.tampilkanMenu();
                    break;

                case 3:
                    System.out.print("Nama Item: ");
                    String namaItem = scanner.next();
                    MenuItem item = menu.cariItem(namaItem);
                    if (item != null) {
                        pesanan.tambahItem(item);
                    } else {
                        System.out.println("Item tidak ditemukan!");
                    }
                    break;

                case 4:
                    pesanan.tampilkanStruk();
                    break;

                case 5:
                    System.out.println("Terima kasih telah menggunakan sistem manajemen restoran.");
                    scanner.close();
                    return;

                default:
                    System.out.println("Pilihan tidak valid.");
            }
        }
    }
}

